jobs:
  deploy:
    if: github.repository == 'ByteLegend/ByteLegend'
    name: Deploy production
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.BYTELEGENDBOT_TOKEN }}
    - continue-on-error: true
      id: deployment
      name: Create GitHub deployment
      uses: chrnorm/deployment-action@releases/v1
      with:
        environment: production
        target_url: https://bytelegend.com
        token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      env:
        ACCESS_KEY_ID_BEIJING: ${{ secrets.ACCESS_KEY_ID_BEIJING }}
        ACCESS_KEY_ID_SEOUL: ${{ secrets.ACCESS_KEY_ID_SEOUL }}
        SECRET_ACCESS_KEY_BEIJING: ${{ secrets.SECRET_ACCESS_KEY_BEIJING }}
        SECRET_ACCESS_KEY_SEOUL: ${{ secrets.SECRET_ACCESS_KEY_SEOUL }}
      name: Deploy to k8s
      uses: gradle/gradle-build-action@v2
      with:
        arguments: deploy "-PbuildTimestamp=${{ github.event.inputs.buildTimestamp
          }}" -DagreePublicBuildScanTermOfService=yes
    - continue-on-error: true
      if: success()
      name: Update deployment status (success)
      uses: chrnorm/deployment-status@releases/v1
      with:
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        state: success
        target_url: https://bytelegend.com
        token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      if: failure()
      name: Update deployment status (failure)
      uses: chrnorm/deployment-status@releases/v1
      with:
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        state: failure
        target_url: https://bytelegend.com
        token: ${{ secrets.GITHUB_TOKEN }}
name: deploy
on:
  repository_dispatch:
    types: trigger-ga___deploy.yml
